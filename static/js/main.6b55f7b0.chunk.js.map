{"version":3,"sources":["components/Form.jsx","components/GifInfo.jsx","App.js","index.js"],"names":["Form","props","useState","gifTitle","setGifTitle","onSubmit","e","console","log","preventDefault","handleSubmit","className","htmlFor","id","type","value","placeholder","onChange","title","target","GifInfo","src","gif","App","gifData","setGifData","a","fetch","res","json","data","images","downsized_large","url","useEffect","limit","queryURL","original","fetchData","onClick","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"2NAoCeA,MAlCf,SAAcC,GACZ,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAeA,OACE,oCACE,0BAAMC,SAfW,SAACC,GACpBC,QAAQC,IAAI,gCAAiCL,GAC7CG,EAAEG,iBACFR,EAAMS,aAAaP,GACnBC,EAAY,KAWoBO,UAAU,YACtC,2BAAOC,QAAQ,YAAf,SACA,2BACEC,GAAG,YACHC,KAAK,OACLC,MAAOZ,EACPa,YAAY,gBACZC,SAfa,SAACX,GACpBC,QAAQC,IAAI,wBACZ,IAAMU,EAAQZ,EAAEa,OAAOJ,MACvBX,EAAYc,MAcR,2BAAOJ,KAAK,SAASC,MAAM,gBCjBpBK,MAVf,SAAkBnB,GAEd,OADAM,QAAQC,IAAR,iBAAsBP,IAElB,yBAAKU,UAAU,YACf,yBAAKU,IAAKpB,EAAMqB,QCAT,SAASC,IACtB,MAA8BrB,mBAAS,IAAvC,mBAAOsB,EAAP,KAAgBC,EAAhB,KACA,EAAgCvB,mBAAS,SAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAF4B,4CA+B5B,8BAAAsB,EAAA,4DACc,8FADd,SAGoBC,MAFN,+FADd,cAGQC,EAHR,gBAIqBA,EAAIC,OAJzB,OAIQC,EAJR,OAKEvB,QAAQC,IAAIsB,GACZL,EAAWK,EAAKA,KAAKC,OAAOC,gBAAgBC,KAN9C,4CA/B4B,sBAwC5B,OAhCA1B,QAAQC,IAAIL,GACZ+B,qBAAU,WAAM,4CACd,kCAAAR,EAAA,4DAEkB,uCACD,mCACG,KACZS,EAAQ,EACRC,EANR,UAEkB,uCAFlB,oBAGiB,mCAHjB,YAIoB,MAJpB,OAM+DjC,EAN/D,mBAMkFgC,EANlF,uCAQoBR,MAAMS,GAR1B,cAQQR,EARR,iBASqBA,EAAIC,OATzB,QASQC,EATR,OAUEL,EAAWK,EAAKA,KAAKK,EAAM,GAAGJ,OAAOM,SAASJ,KAM9C1B,QAAQC,IAAI4B,GAhBd,6CADc,uBAAC,WAAD,wBAmBdE,KACC,CAACnC,IAYF,yBAAKQ,UAAU,OACb,qCACA,kBAAC,EAAD,CAAMD,aAvCW,SAACQ,GACpBX,QAAQC,IAAR,6CAAkDU,IAClDd,EAAYc,MAsCV,2BAAOJ,KAAK,SACVyB,QA7CsB,2CA8CtBxB,MAAM,wBACR,kBAAC,EAAD,CAASO,IAAKE,KChDpB,IAAMgB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACtB,EAAD,OAEFiB,I","file":"static/js/main.6b55f7b0.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nfunction Form(props) {\n  const [gifTitle, setGifTitle] = useState('');\n\n  const handleSubmit = (e) => {\n    console.log('Form - handleSubmit - gifData', gifTitle);\n    e.preventDefault();\n    props.handleSubmit(gifTitle);\n    setGifTitle('');\n  };\n\n  const handleChange = (e) => {\n    console.log('handleChange clicked');\n    const title = e.target.value;\n    setGifTitle(title);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className=\".gif-row\">\n        <label htmlFor=\"gifTitle\">Find:</label>\n        <input\n          id=\"gif-title\"\n          type=\"text\"\n          value={gifTitle}\n          placeholder=\"type of giphy\"\n          onChange={handleChange}\n        />\n        <input type=\"submit\" value=\"Find Gif\" />\n        \n      </form>\n    </>\n  );\n}\n\nexport default Form;\n","import React from \"react\";\n\nfunction GifInfo (props) {\n    console.log(`props: ${props}`);\n    return (\n        <div className='gif-data'>\n        <img src={props.gif} />\n        </div>\n    )\n    \n}\n\nexport default GifInfo","import React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport Form from \"./components/Form\";\nimport GitInfo from \"./components/GifInfo\"\n\n\nexport default function App() {\n  const [gifData, setGifData] = useState([]);\n  const [gifTitle, setGifTitle] = useState('hello');\n\n  const handleSubmit = (title) => {\n    console.log(`APP: Form - handleSubmit - gifData:${title}`);\n    setGifTitle(title);\n  };\n  console.log(gifTitle);\n  useEffect(() => {\n    async function fetchData () {\n \n      const baseURL = 'https://api.giphy.com/v1/gifs/search';\n      const apiKey = '03nXj96X2ubPEFL47yCazrDAFSm6d0UQ';\n      const queryType = 'q=';\n      const limit = 5;\n      const queryURL = `${baseURL}?api_key=${apiKey}&${queryType}${gifTitle}}&limit=${limit}&offset=0&rating=g&lang=en`; \n    \n      const res = await fetch(queryURL);\n      const data = await res.json();\n      setGifData(data.data[limit-1].images.original.url);\n  \n      // fetch(queryURL)\n      // .then(res => res.json())\n      // .then(data => {setGifData(data.data[2].images.original.url)})\n      // console.log(queryURL);\n      console.log(queryURL); \n    }\n    fetchData();\n  } ,[gifTitle])\n  \n  async function fetchRandom () {\n    const URL = 'https://api.giphy.com/v1/gifs/random?api_key=03nXj96X2ubPEFL47yCazrDAFSm6d0UQ&tag=&rating=r';\n\n    const res = await fetch(URL);\n    const data = await res.json();\n    console.log(data);\n    setGifData(data.data.images.downsized_large.url);\n  }\n\n  return (\n    <div className=\"App\"> \n      <h1>Giphy</h1> \n      <Form handleSubmit={handleSubmit} />\n      <input type=\"submit\"\n        onClick={fetchRandom} \n        value=\"Make API Call Again\" />\n      <GitInfo gif={gifData} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}